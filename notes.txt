Next:
* SystemRunner and Recorder
* PiecewiseFunction and multi-variable plots
* I guess we'll reverse it: spring.position is the Variable, and for the update
  method, we'll either pass an object which provides setattr/getattr access to
  the values, or resort to a symbol name hack of some kind (if at all possible)
* Note: there can be assignment to reference variables: manually setting
  pendulum.spring.displacement.
* Arithmetic with variables would be useful
* Connecting to constant/function input
* There should be different Variable subclasses instead of large elifs   

Goal:
* Setting pendulum.mass.position or pendulum.spring.displacement must be the
  same thing.
  We don't want a pendulum.position, because we don't want to duplicate every
  single internal value.
* We'll need a mechanism for enumerating (a) variables and (b) subsystems
  
Open questions:
* Make sure that all inputs are connected?
* Do we distinguish between internal values and outputs? Between inputs and outputs?
* parameters
* setting initial values from outside (like parameters, or as parameters)
* subsystems (e. g. vehicle with 4 wheels)
* visualization (also internal values: pwm values in a motor controller system,
  integral error in a PID controller)
